Index: default_arm7/source/main.c
===================================================================
--- default_arm7/source/main.c	(revision 4761)
+++ default_arm7/source/main.c	(working copy)
@@ -57,24 +57,24 @@
 //---------------------------------------------------------------------------------
 	readUserSettings();
 
-	irqInit();
+	//irqInit();
 	// Start the RTC tracking IRQ
-	initClockIRQ();
-	fifoInit();
+	//initClockIRQ();
+	//fifoInit();
 
-	mmInstall(FIFO_MAXMOD);
+	//mmInstall(FIFO_MAXMOD);
 
-	SetYtrigger(80);
+	//SetYtrigger(80);
 
-	installWifiFIFO();
-	installSoundFIFO();
+	//installWifiFIFO();
+	//installSoundFIFO();
 
-	installSystemFIFO();
+	//installSystemFIFO();
 
-	irqSet(IRQ_VCOUNT, VcountHandler);
-	irqSet(IRQ_VBLANK, VblankHandler);
+	//irqSet(IRQ_VCOUNT, VcountHandler);
+	//irqSet(IRQ_VBLANK, VblankHandler);
 
-	irqEnable( IRQ_VBLANK | IRQ_VCOUNT | IRQ_NETWORK);
+	//irqEnable( IRQ_VBLANK | IRQ_VCOUNT | IRQ_NETWORK);
 	
 	setPowerButtonCB(powerButtonCB);   
 
Index: libfat/source/disc.c
===================================================================
--- libfat/source/disc.c	(revision 4761)
+++ libfat/source/disc.c	(working copy)
@@ -93,7 +93,7 @@
 }
 
 const INTERFACE_ID _FAT_disc_interfaces[] = {
-	{"sd",  get_io_dsisd},
+	//{"sd",  get_io_dsisd}, //ichfly this blocks fatinit
 	{"fat", dldiGetInternal},
 	{NULL, NULL}
 };	
Index: libnds/include/nds/arm9/background.h
===================================================================
--- libnds/include/nds/arm9/background.h	(revision 4761)
+++ libnds/include/nds/arm9/background.h	(working copy)
@@ -625,7 +625,7 @@
 	sassert(layer != 0 || !video3DEnabled(), "Background 0 is currently being used for 3D display");
     sassert(layer > 1 || type == BgType_Text8bpp || type == BgType_Text4bpp, "Incorrect background type for mode");
     //sassert((size != BgSize_B8_512x1024 && size != BgSize_B8_1024x512) || videoGetMode() == 6, "Incorrect background type for mode");
-	sassert(tileBase == 0 || type < BgType_Bmp8, "Tile base is unused for bitmaps.  Can be offset using mapBase * 16KB");
+	//sassert(tileBase == 0 || type < BgType_Bmp8, "Tile base is unused for bitmaps.  Can be offset using mapBase * 16KB");
 	sassert((mapBase == 0 || type != BgType_Bmp8) || (size != BgSize_B8_512x1024 && size != BgSize_B8_1024x512), "Large Bitmaps cannot be offset");
 
 	return bgInit_call(layer, type, size, mapBase, tileBase);
Index: libnds/include/nds/interrupts.h
===================================================================
--- libnds/include/nds/interrupts.h	(revision 4761)
+++ libnds/include/nds/interrupts.h	(working copy)
@@ -134,6 +134,11 @@
 #endif
 
 
+#ifdef ARM9
+extern VoidFn anytimejmp;
+extern u32 anytimejmpfilter;
+#endif
+
 extern VoidFn	__irq_vector[];
 extern	vuint32	__irq_flags[];
 extern	vuint32	__irq_flagsaux[];
Index: libnds/source/common/interruptDispatcher.s
===================================================================
--- libnds/source/common/interruptDispatcher.s	(revision 4761)
+++ libnds/source/common/interruptDispatcher.s	(working copy)
@@ -19,8 +19,8 @@
 		must not be misrepresented as being the original software.
 	3.	This notice may not be removed or altered from any source
 		distribution.
+a
 
-
 ---------------------------------------------------------------------------------*/
 
 #ifdef ARM7
@@ -32,17 +32,67 @@
 #endif
 
 	.extern	irqTable
+	.extern	anytimejmp
+	.extern	anytimejmpfilter
 	.code 32
 
+
+_exMain_tmpPu:
+	.word 0
+			
 	.global	IntrMain, __cpsr_mask
 @---------------------------------------------------------------------------------
 IntrMain:
 @---------------------------------------------------------------------------------
+	mrc	p15, 0, r2, c5, c0, 2
+	ldr	r0,=0x33333363
+	mcr	p15, 0, r0, c5, c0, 2
+	ldr	r1, =_exMain_tmpPu
+	str	r2, [r1]
+
 	mov	r12, #0x4000000		@ REG_BASE
 
+#ifndef ARM7
+	ldr	r0, [r12, #0x214]
+#endif
+
 	ldr	r1, [r12, #0x208]	@ r1 = IME
 	cmp	r1, #0
-	bxeq	lr
+
+	@ldr	r2, =_exMain_tmpPu @ichfly shortcut
+	@ldr	r2, [r2]
+
+	mcr	p15, 0, r2, c5, c0, 2 @ichfly einschub
+
+
+	bxeq	lr @ichfly einschub
+
+#ifndef ARM7
+	ldr	r2, =anytimejmpfilter
+	ands r0,r0,r2 @ anytimejmpfilter und IF
+	cmp r0,#0
+	BEQ	got_over_gba_handler
+
+	
+@---------------------------------------------------------------------------------
+got_gba_handler:
+@---------------------------------------------------------------------------------
+	push	{lr}
+	adr	lr, IntrRetgba
+	ldr	r0, =anytimejmp
+	bx	r0
+
+@---------------------------------------------------------------------------------
+IntrRetgba:
+@---------------------------------------------------------------------------------
+	pop	{lr}
+@---------------------------------------------------------------------------------
+got_over_gba_handler:
+@---------------------------------------------------------------------------------
+#endif
+
+	ldr	r0,=0x33333363
+	mcr	p15, 0, r0, c5, c0, 2
 	
 	mov	r0, #0
 	str	r0, [r12, #0x208]	@ disable IME
@@ -86,6 +136,12 @@
 	str	r1, [r12, #4]	@ IF Clear
 	ldmfd   sp!, {r0-r1,r12,lr}	@ {spsr, IME, REG_BASE, lr_irq}
 	str	r1, [r12, #0x208]	@ restore REG_IME
+
+	ldr	r1, =_exMain_tmpPu
+	ldr	r1, [r1]
+
+	mcr	p15, 0, r1, c5, c0, 2
+
 	mov	pc,lr
 
 @---------------------------------------------------------------------------------
@@ -100,7 +156,7 @@
 got_handler:
 @---------------------------------------------------------------------------------
 
-	str	r0, [r12, #4]	@ IF Clear
+	str	r0, [r12, #4]	@ IF Clear @ichfly need that waaaaaaa
 
 	mrs	r2, cpsr
 	mov	r3, r2
@@ -125,6 +181,12 @@
 	ldmfd   sp!, {r0-r1,r12,lr}	@ {spsr, IME, REG_BASE, lr_irq}
 	msr	spsr, r0		@ restore spsr
 	str	r1, [r12, #0x208]	@ restore REG_IME
+
+	ldr	r1, =_exMain_tmpPu
+	ldr	r1, [r1]
+
+	mcr	p15, 0, r1, c5, c0, 2
+
 	mov	pc,lr
 
 	.pool
Index: libnds/source/common/interrupts.c
===================================================================
--- libnds/source/common/interrupts.c	(revision 4761)
+++ libnds/source/common/interrupts.c	(working copy)
@@ -37,7 +37,9 @@
 
 
 #ifdef ARM9
-#define INT_TABLE_SECTION __attribute__((section(".itcm")))
+#define INT_TABLE_SECTION __attribute__((section(".dtcm")))
+VoidFn anytimejmp = (VoidFn)0; __attribute__((section(".dtcm")))
+u32 anytimejmpfilter = 0; __attribute__((section(".dtcm")))
 #else
 #define INT_TABLE_SECTION
 #endif
